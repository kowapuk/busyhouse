from machine import Pin, RTC, PWMfrom neopixel import NeoPixelfrom utime import sleep# GPIO5 - yellow, GPIO4 - blue, GPIO0 - green, GPIO2 - red# GPIO14 - np class House():    led = 14  yellow = 5  blue = 4  red = 2  green = 12    def __init__(self):    self.timer = RTC()    self.np = NeoPixel(Pin(House.led), 25)    self.yel_but = Pin(House.yellow, Pin.IN)    self.blu_but = Pin(House.blue, Pin.IN)    self.red_but = Pin(House.red, Pin.IN)    self.gre_but = Pin(House.green, Pin.IN)    self.beep = Pin(15, Pin.OUT)    self.beep_play = PWM(self.beep)    # время, в течени    self.time_to_action = 5    # self.yel_but.irq(trigger=Pin.IRQ_FALLING, handler=self.callback)      # def callback(self, obj):  #   # self.np.fill((0,0,0))  #   # self.np.write()  #   self.led_on((15, 15, 0))  #   del self.yel_bu  #   self.run()  def led_on(self, color):    self.np.fill(color)    self.np.write()    def run(self):    print('Run')    print('During work to 10 cycles')    self.timer.alarm(0, self.time_to_action*1000)    while self.timer.alarm_left() > 0:      if self.blu_but.value():        print('Blue')        self.beep_play.freq(0)        self.beep_play.duty(512)        self.led_on((0, 0, 20))      elif self.gre_but.value():        print('Green')        self.beep_play.freq(2)        self.beep_play.duty(512)        self.led_on((0, 20, 0))      elif self.red_but.value():        print('Red')        self.beep_play.freq(4)        self.beep_play.duty(512)        self.led_on((20, 0, 0))      elif self.yel_but.value():      	self.beep_play.freq(8)        self.beep_play.duty(512)      	self.led_on((20, 20, 0))    self.beep_play.freq(0)    self.beep_play.duty(0)    self.np.fill((0,0,0))    self.np.write()        # Start dev = House()while True:  print('Working')  dev.run()